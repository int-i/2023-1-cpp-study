#include <iostream>
using std::cin;
using std::cout;
using std::endl;

using std::string;

// Class의 정의: 현실에 존재하는 개념을 컴퓨터가 이해 할 수 있게 추상화 한 것
// 예를 들어 밀키트라는 클래스가 있다면, 밀키트라는 개념을 아래처럼 추상화 할 수 있다.
class 밀키트 {
public: // 밀키트와 관련된 기능(function)을 멤버 함수로 정의한다.
	밀키트(string 이름, string 종류, int 조리_시간, double 조리_온도) {
		this->이름 = 이름;
		this->종류 = 종류;
		this->조리_시간 = 조리_시간;
		this->조리_온도 = 조리_온도;
	}

	void 조리법() {
		cout << 이름 << "을(를) 조리하는 방법:" << endl;

		// 입력받은 멤버 변수 {종류} 값에 따라 조리법이 달라진다.
		if (종류 == "볶음") {
			cout << "밀키트 내에 있는 재료를 다 꺼내서 메인 재료와 채소를 다듬어 주고," << endl
				<< "궁중 팬이나 웍을 " << 조리_온도 << "도로 가열하여 메인 재료와 채소들을 넣고, " << endl
				<< 조리_시간 << "분 만큼 볶다가 향신료를 뿌려준다." << endl;
		}
		else if (종류 == "탕") {
			cout << "밀키트 내에 있는 육수를 꺼내 냄비에 넣고," << endl
				<< "물을 약간 넣어 어느정도 양을 맞추고," << endl
				<< 조리_온도 << "도로 가열시켜, 나머지 재료들을 몽땅 때려 넣고," << endl
				<< 조리_시간 << "분간 익힌다." << endl;
		}
		else if (종류 == "구이") {
			cout << "밀키트 내에 있는 메인 재료를 꺼내 향신료에 마리네이드 한 후," << endl
				<< "팬을 꺼내 기름을 두르고, " << 조리_온도 << "도로 달궈준 다음," << endl
				<< 조리_시간 << "분간 메인 재료를 기름에 튀기듯이 구워준다." << endl;
		}
	}


private: // 밀키트라는 개념을 이루는 여러 속성을 멤버 변수로 정의한다.
	string 이름; // 해당 밀키트의 이름
	string 종류; // 해당 밀키트의 종류
	int 조리_시간; // 해당 밀키트를 조리하는데 걸리는 시간
	double 조리_온도; // 해당 밀키트를 조리하는 온도
};


int main() {
	// 위에서 만든 클래스를 통해 객체를 선언할 수 있다.
	밀키트 감자탕{ "감자탕", "탕", 10, 100 };

	감자탕.조리법();


	밀키트 스테이크{ "스테이크", "구이", 6, 170 };
	스테이크.조리법();

	밀키트 제육볶음{ "제육볶음", "볶음", 12, 160 };
	제육볶음.조리법();

	return 0;
}
